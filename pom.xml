<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.6.7</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>am.ik.blog</groupId>
	<artifactId>blog-api</artifactId>
	<version>5.0.0-SNAPSHOT</version>
	<name>blog-api</name>
	<description>Blog API</description>

	<properties>
		<java.version>11</java.version>
		<spring-boot.version>${project.parent.version}</spring-boot.version>
		<spring-cloud.version>2021.0.2</spring-cloud.version>
		<wavefront.version>2.2.2</wavefront.version>
		<spring-native.version>0.11.4</spring-native.version>
		<testcontainers.version>1.17.1</testcontainers.version>
		<start-class>am.ik.blog.BlogApiApplication</start-class>
		<native-image-args></native-image-args>
		<jar-classifier></jar-classifier>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.experimental</groupId>
			<artifactId>spring-native</artifactId>
			<version>${spring-native.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.experimental</groupId>
			<artifactId>spring-aot</artifactId>
			<version>${spring-native.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-rsocket</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-r2dbc</artifactId>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
		</dependency>
		<dependency>
			<groupId>com.wavefront</groupId>
			<artifactId>wavefront-spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-sleuth</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-sleuth-zipkin</artifactId>
		</dependency>
		<dependency>
			<groupId>io.rsocket</groupId>
			<artifactId>rsocket-micrometer</artifactId>
		</dependency>
		<dependency>
			<groupId>am.ik.github</groupId>
			<artifactId>reactive-github-client</artifactId>
			<version>0.0.4</version>
		</dependency>
		<dependency>
			<groupId>am.ik.yavi</groupId>
			<artifactId>yavi</artifactId>
			<version>0.11.2</version>
		</dependency>
		<dependency>
			<groupId>org.yaml</groupId>
			<artifactId>snakeyaml</artifactId>
		</dependency>
		<dependency>
			<groupId>io.r2dbc</groupId>
			<artifactId>r2dbc-postgresql</artifactId>
		</dependency>
		<dependency>
			<groupId>io.github.resilience4j</groupId>
			<artifactId>resilience4j-circuitbreaker</artifactId>
		</dependency>
		<dependency>
			<groupId>io.github.resilience4j</groupId>
			<artifactId>resilience4j-reactor</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>com.squareup.okhttp3</groupId>
			<artifactId>mockwebserver</artifactId>
			<version>3.14.9</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>io.projectreactor</groupId>
			<artifactId>reactor-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>junit-jupiter</artifactId>
			<version>${testcontainers.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>r2dbc</artifactId>
			<version>${testcontainers.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>postgresql</artifactId>
			<version>${testcontainers.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.wavefront</groupId>
				<artifactId>wavefront-spring-boot-bom</artifactId>
				<version>${wavefront.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.experimental</groupId>
				<artifactId>spring-aot-maven-plugin</artifactId>
				<version>${spring-native.version}</version>
				<configuration>
					<removeSpelSupport>true</removeSpelSupport>
				</configuration>
				<executions>
<!--					<execution>-->
<!--						<id>test-generate</id>-->
<!--						<goals>-->
<!--							<goal>test-generate</goal>-->
<!--						</goals>-->
<!--					</execution>-->
					<execution>
						<id>generate</id>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>build-info</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<classifier>${jar-classifier}</classifier>
					<layers>
						<enabled>true</enabled>
					</layers>
				</configuration>
			</plugin>
			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>gen-build-info</id>
						<phase>process-resources</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<echo message=""
									  file="target/classes/application.properties"
									  append="yes"/>
								<echo message=""
									  file="target/classes/application.properties"
									  append="yes"/>
								<echo message="info.maven.versions.spring-boot=${spring-boot.version}${line.separator}"
									  file="target/classes/application.properties"
									  append="yes"/>
								<echo message="info.maven.versions.spring-cloud=${spring-cloud.version}${line.separator}"
									  file="target/classes/application.properties"
									  append="yes"/>
								<echo message="info.maven.versions.spring-framework=${spring-framework.version}${line.separator}"
									  file="target/classes/application.properties"
									  append="yes"/>
								<echo message="info.maven.versions.spring-security=${spring-security.version}${line.separator}"
									  file="target/classes/application.properties"
									  append="yes"/>
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>mostly-static</id>
			<properties>
				<native-image-args>-H:+StaticExecutableWithDynamicLibC</native-image-args>
			</properties>
		</profile>
		<profile>
			<id>native</id>
			<properties>
				<jar-classifier>exec</jar-classifier>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.graalvm.buildtools</groupId>
						<artifactId>native-maven-plugin</artifactId>
						<version>0.9.11</version>
						<executions>
							<execution>
								<id>build-native</id>
								<goals>
									<goal>build</goal>
								</goals>
								<phase>package</phase>
							</execution>
						</executions>
						<configuration>
							<buildArgs>${native-image-args}</buildArgs>
							<imageName>${start-class}</imageName>
							<outputDirectory>${project.build.directory}</outputDirectory>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>3.0.0</version>
						<executions>
							<execution>
								<id>zip</id>
								<phase>package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<echo message="web: ./${start-class}"
											  file="${project.build.directory}/Procfile"/>
										<zip destfile="${project.build.directory}/${project.artifactId}-${project.version}.zip">
											<zipfileset dir="${project.build.directory}"
														filemode="755"
														includes="${start-class}"/>
											<fileset dir="${project.build.directory}"
													 includes="Procfile"/>
										</zip>
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-install-plugin</artifactId>
						<version>2.5.2</version>
						<configuration>
							<groupId>${project.groupId}</groupId>
							<artifactId>${project.artifactId}</artifactId>
							<version>${project.version}</version>
							<packaging>zip</packaging>
							<file>
								${project.build.directory}/${project.artifactId}-${project.version}.zip
							</file>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-deploy-plugin</artifactId>
						<version>2.8.2</version>
						<configuration>
							<groupId>${project.groupId}</groupId>
							<artifactId>${project.artifactId}</artifactId>
							<version>${project.version}</version>
							<packaging>zip</packaging>
							<file>
								${project.build.directory}/${project.artifactId}-${project.version}.zip
							</file>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<repositories>
<!--		<repository>-->
<!--			<id>spring-snapshot</id>-->
<!--			<name>Spring Snapshots</name>-->
<!--			<url>https://repo.spring.io/snapshot</url>-->
<!--			<snapshots>-->
<!--				<enabled>true</enabled>-->
<!--			</snapshots>-->
<!--		</repository>-->
<!--		<repository>-->
<!--			<id>spring-milestones</id>-->
<!--			<name>Spring Milestones</name>-->
<!--			<url>https://repo.spring.io/milestone</url>-->
<!--		</repository>-->
		<repository>
			<id>spring-release</id>
			<name>Spring release</name>
			<url>https://repo.spring.io/release</url>
		</repository>
	</repositories>
	<pluginRepositories>
<!--		<pluginRepository>-->
<!--			<id>spring-snapshot</id>-->
<!--			<name>Spring Snapshots</name>-->
<!--			<url>https://repo.spring.io/snapshot</url>-->
<!--			<snapshots>-->
<!--				<enabled>true</enabled>-->
<!--			</snapshots>-->
<!--		</pluginRepository>-->
<!--		<pluginRepository>-->
<!--			<id>spring-milestones</id>-->
<!--			<name>Spring Milestones</name>-->
<!--			<url>https://repo.spring.io/milestone</url>-->
<!--		</pluginRepository>-->
		<pluginRepository>
			<id>spring-release</id>
			<name>Spring release</name>
			<url>https://repo.spring.io/release</url>
		</pluginRepository>
	</pluginRepositories>
</project>
